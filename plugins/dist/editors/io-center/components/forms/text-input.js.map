{"version":3,"file":"text-input.js","sourceRoot":"","sources":["../../../../../src/editors/io-center/components/forms/text-input.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css, property, customElement } from 'lit-element';\nimport { FormGroup } from \"./form-group\";\n\nimport '@material/mwc-icon';\n\n@customElement('text-input')\nexport class TextInput extends LitElement {\n  @property({ type: String }) name = '';\n  @property({ type: String }) label = '';\n  @property({ type: String }) placeholder = '';\n  @property({ type: Boolean }) required = false;\n  @property({ type: Boolean, reflect: true }) error = false;\n  @property({ type: String }) errorMessage = 'This field is required';\n  @property({ type: Array }) validators: Array<(value: string) => string | null> = [];\n  @property({ type: String }) icon = '';\n\n  private _value = '';\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val: string) {\n    const oldValue = this._value;\n    this._value = val;\n    this.requestUpdate('value', oldValue);\n    this._validate();\n    this._notifyValueChanged();\n  }\n\n  firstUpdated() {\n    this._registerWithFormGroup();\n  }\n\n  resetInput() {\n    this.value = '';\n    this.error = false;\n    this.errorMessage = '';\n    this._registerWithFormGroup();\n  }\n\n  private _onInput(e: Event) {\n    this.value = (e.target as HTMLInputElement).value;\n  }\n\n  private _validate() {\n    let errorMsg = '';\n\n    if (this.required && !this.value) {\n      errorMsg = this.errorMessage;\n    }\n\n    for (const validator of this.validators) {\n      const result = validator(this.value);\n      if (result) {\n        errorMsg = result;\n        break;\n      }\n    }\n\n    const previousError = this.error;\n    this.error = !!errorMsg;\n    this.errorMessage = errorMsg || this.errorMessage;\n\n    if (previousError !== this.error || !this.error) {\n      this._notifyFormGroup();\n    }\n  }\n\n  private _notifyValueChanged() {\n    this.dispatchEvent(new CustomEvent('value-changed', {\n      detail: this.value\n    }));\n  }\n\n  private _notifyFormGroup() {\n    const formGroup = this._findFormGroup();\n    if (formGroup) {\n      formGroup.updateValidity(this.name, !this.error);\n    }\n  }\n\n  private _registerWithFormGroup() {\n    const formGroup = this._findFormGroup();\n    if (formGroup) {\n      const initialValidity = !this.required ||  !!this.value;\n      formGroup.registerInput(this.name, initialValidity);\n    }\n  }\n\n  private _findFormGroup() {\n    return this.closest('form-group') as FormGroup;\n  }\n\n  render() {\n    return html`\n      <div class=\"input-container\">\n        ${this.label\n          ? html`\n            <label class=\"input-label\">\n              ${this.label}\n              ${this.required ? html`<span class=\"required\">*</span>` : ''}\n            </label>\n          `\n          : ''}\n        <div class=\"input-wrapper\">\n          <input\n            type=\"text\"\n            class=\"input-field\"\n            .value=\"${this.value}\"\n            placeholder=\"${this.placeholder}\"\n            @input=\"${this._onInput}\"\n          />\n          ${this.icon ? html`<mwc-icon class=\"input-icon\">${this.icon}</mwc-icon>` : ''}\n        </div>\n        ${this.error ? html`<span class=\"error-message\">${this.errorMessage}</span>` : ''}\n      </div>\n    `;\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      font-family: Arial, sans-serif;\n      width: 100%;\n    }\n\n    .input-container {\n      position: relative;\n      width: 100%;\n      margin-bottom: 1rem;\n    }\n\n    .input-label {\n      display: block;\n      font-size: 0.875rem;\n      margin-bottom: 0.5rem;\n      color: var(--input-label-color, #555);\n    }\n\n    .input-label .required {\n      color: var(--input-required-color, #ff4d4d);\n      margin-left: 0.25rem;\n    }\n\n    .input-wrapper {\n      position: relative;\n      width: 100%;\n    }\n\n    .input-field {\n      width: 100%;\n      padding: 0.75rem;\n      padding-right: 2.5rem; /* Add padding for the icon */\n      font-size: 1rem;\n      border: 1px solid var(--input-border-color, #ccc);\n      border-radius: 6px;\n      outline: none;\n      transition: border-color 0.3s ease, box-shadow 0.3s ease;\n      background-color: var(--input-background-color, #fff);\n      color: var(--input-text-color, #333);\n      box-sizing: border-box;\n    }\n\n    .input-field:focus {\n      border-color: var(--input-focus-border-color, #007bff);\n      box-shadow: 0 0 8px rgba(0, 123, 255, 0.25);\n    }\n\n    .input-field::placeholder {\n      color: var(--input-placeholder-color, #aaa);\n      opacity: 1;\n    }\n\n    .input-icon {\n      position: absolute;\n      top: 50%;\n      right: 0.75rem;\n      transform: translateY(-50%);\n      font-size: 1.2rem;\n      pointer-events: none; /* Prevent the icon from blocking input interaction */\n      color: var(--input-icon-color, #aaa);\n    }\n\n    .error-message {\n      color: var(--input-error-color, #ff4d4d);\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n      display: none;\n    }\n\n    :host([error]) .input-field {\n      border-color: var(--input-error-color, #ff4d4d);\n      box-shadow: 0 0 8px rgba(255, 77, 77, 0.25);\n    }\n\n    :host([error]) .input-label,\n    :host([error]) .error-message {\n      color: var(--input-error-color, #ff4d4d);\n    }\n\n    :host([error]) .error-message {\n      display: block;\n    }\n  `;\n}\n"]}