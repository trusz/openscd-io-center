{"version":3,"file":"selection-box.js","sourceRoot":"","sources":["../../../../../src/editors/io-center/components/forms/selection-box.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css, property, customElement } from 'lit-element';\nimport { FormGroup } from './form-group';\n\nexport interface SelectionItem {\n  label: string;\n  value: any;\n}\n\n@customElement('selection-box')\nexport class SelectionBox extends LitElement {\n  static styles = css`\n    :host {\n      display: block;\n      font-family: Arial, sans-serif;\n      width: 100%;\n      position: relative;\n    }\n\n    .label {\n      font-size: 1rem;\n      margin-bottom: 0.5rem;\n      color: #555;\n      display: flex;\n      align-items: center;\n    }\n\n    .label .required {\n      color: var(--input-required-color, #ff4d4d);\n      margin-left: 0.25rem;\n    }\n\n    .select-box {\n      width: 100%;\n      padding: 10px;\n      font-size: 1rem;\n      border: 1px solid #ccc;\n      border-radius: 6px;\n      background-color: #fff;\n      color: #333;\n      box-sizing: border-box;\n      outline: none;\n      cursor: pointer;\n    }\n\n    .select-box:focus {\n      border-color: #007bff;\n      box-shadow: 0 0 8px rgba(0, 123, 255, 0.25);\n    }\n\n    .dropdown {\n      position: absolute;\n      top: 100%;\n      left: 0;\n      right: 0;\n      max-height: 0;\n      overflow: hidden;\n      background-color: #fff;\n      border: 1px solid #ccc;\n      border-top: none;\n      border-radius: 0 0 6px 6px;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n      transition: max-height 0.3s ease, opacity 0.3s ease;\n      opacity: 0;\n      z-index: 1;\n    }\n\n    .dropdown.open {\n      max-height: 200px; /* Adjust this value as needed */\n      opacity: 1;\n    }\n\n    .dropdown-item {\n      padding: 10px;\n      font-size: 1rem;\n      color: #333;\n      cursor: pointer;\n      transition: background-color 0.3s ease;\n    }\n\n    .dropdown-item:hover {\n      background-color: #e6f7ff;\n    }\n\n    .dropdown-item.selected {\n      background-color: #1890ff;\n      color: white;\n    }\n\n    .placeholder {\n      color: #999;\n      padding: 10px;\n    }\n\n    .error-message {\n      color: var(--input-error-color, #ff4d4d);\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n      display: none;\n    }\n\n    :host([error]) .select-box {\n      border-color: var(--input-error-color, #ff4d4d);\n      box-shadow: 0 0 8px rgba(255, 77, 77, 0.25);\n    }\n\n    :host([error]) .label,\n    :host([error]) .error-message {\n      color: var(--input-error-color, #ff4d4d);\n    }\n\n    :host([error]) .error-message {\n      display: block;\n    }\n  `;\n\n  @property({ type: Array }) items: SelectionItem[] = [];\n  @property({ type: Array }) selectedItems: any[] = [];\n  @property({ type: Boolean }) multiSelect: boolean = false;\n  @property({ type: String }) label: string = '';\n  @property({ type: String }) noItemsText: string = 'No options available';\n  @property({ type: Boolean }) required: boolean = false;\n  @property({ type: Boolean, reflect: true }) error: boolean = false;\n  @property({ type: String }) errorMessage: string = 'This field is required';\n  @property({ type: Boolean }) dropdownOpen: boolean = false;\n\n  firstUpdated() {\n    this._registerWithFormGroup();\n  }\n\n  resetInput() {\n    this.selectedItems = [];\n    this.error = false;\n    this.errorMessage = '';\n    this.dropdownOpen = false;\n    this._notifyFormGroup();\n  }\n\n  private _toggleDropdown() {\n    this.dropdownOpen = !this.dropdownOpen;\n  }\n\n  private _onSelectionChange(item: SelectionItem) {\n    if (this.multiSelect) {\n      this._toggleMultiSelection(item);\n    } else {\n      this._toggleSingleSelection(item);\n    }\n    this.dropdownOpen = false; // Close dropdown after selection\n  }\n\n  private _toggleSingleSelection(item: SelectionItem) {\n    this.selectedItems = this.selectedItems.includes(item.value) ? [] : [item.value];\n    this._validate();\n    this._notifySelectionChange();\n  }\n\n  private _toggleMultiSelection(item: SelectionItem) {\n    if (this.selectedItems.includes(item.value)) {\n      this.selectedItems = this.selectedItems.filter(i => i !== item.value);\n    } else {\n      this.selectedItems = [...this.selectedItems, item.value];\n    }\n    this._validate();\n    this._notifySelectionChange();\n  }\n\n  private _validate() {\n    let errorMsg = '';\n\n    if (this.required && this.selectedItems.length === 0) {\n      errorMsg = this.errorMessage;\n    }\n\n    const previousError = this.error;\n    this.error = !!errorMsg;\n    this.errorMessage = errorMsg || this.errorMessage;\n\n    if (previousError !== this.error || !this.error) {\n      this._notifyFormGroup(!this.error);\n    }\n  }\n\n  private _notifySelectionChange() {\n    this.dispatchEvent(new CustomEvent('selection-changed', {\n      detail: { selectedItems: this.selectedItems },\n    }));\n  }\n\n  private _notifyFormGroup(isValid: boolean = true) {\n    const formGroup = this._findFormGroup();\n    if (formGroup) {\n      formGroup.updateValidity(this.label, isValid);\n    }\n  }\n\n  private _registerWithFormGroup() {\n    const formGroup = this._findFormGroup();\n    if (formGroup) {\n      const initialValidity = !this.required || this.selectedItems.length > 0;\n      formGroup.registerInput(this.label, initialValidity);\n    }\n  }\n\n  private _findFormGroup() {\n    return this.closest('form-group') as FormGroup;\n  }\n\n  render() {\n    return html`\n      <div class=\"input-container\">\n        ${this.label\n      ? html`\n              <label class=\"label\">\n                ${this.label}\n                ${this.required ? html`<span class=\"required\">*</span>` : ''}\n              </label>\n            `\n      : ''}\n        <div class=\"select-box\" @click=\"${this._toggleDropdown}\">\n          ${this.selectedItems.length > 0\n      ? this.items.find(item => item.value === this.selectedItems[0])?.label || 'Select an option'\n      : 'Select an option'}\n        </div>\n        <div class=\"dropdown ${this.dropdownOpen ? 'open' : ''}\">\n          ${this.items.length > 0\n      ? this.items.map(item => html`\n                <div\n                  class=\"dropdown-item ${this.selectedItems.includes(item.value) ? 'selected' : ''}\"\n                  @click=\"${() => this._onSelectionChange(item)}\">\n                  ${item.label}\n                </div>\n              `)\n      : html`<div class=\"placeholder\">${this.noItemsText}</div>`}\n        </div>\n        ${this.error ? html`<span class=\"error-message\">${this.errorMessage}</span>` : ''}\n      </div>\n    `;\n  }\n}\n"]}