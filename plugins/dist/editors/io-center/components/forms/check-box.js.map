{"version":3,"file":"check-box.js","sourceRoot":"","sources":["../../../../../src/editors/io-center/components/forms/check-box.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css, property, customElement } from 'lit-element';\nimport { FormGroup } from './form-group';\n\n@customElement('check-box')\nexport class CheckBox extends LitElement {\n  static styles = css`\n    :host {\n      display: block;\n      font-family: Arial, sans-serif;\n      width: 100%;\n    }\n\n    .label-container {\n      display: flex;\n      align-items: center;\n    }\n\n    .label {\n      font-size: 1rem;\n      margin-left: 0.5rem;\n      color: #555;\n    }\n\n    .label .required {\n      color: var(--input-required-color, #ff4d4d);\n      margin-left: 0.25rem;\n    }\n\n    input[type='checkbox'] {\n      width: 20px;\n      height: 20px;\n      cursor: pointer;\n    }\n\n    .error-message {\n      color: var(--input-error-color, #ff4d4d);\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n      display: none;\n    }\n\n    :host([error]) .label,\n    :host([error]) .error-message {\n      color: var(--input-error-color, #ff4d4d);\n    }\n\n    :host([error]) .error-message {\n      display: block;\n    }\n  `;\n\n  @property({ type: Boolean }) checked: boolean = false;\n  @property({ type: String }) label: string = '';\n  @property({ type: Boolean }) required: boolean = false;\n  @property({ type: Boolean, reflect: true }) error: boolean = false;\n  @property({ type: String }) errorMessage: string = 'This field is required';\n\n  firstUpdated() {\n    this._registerWithFormGroup();\n  }\n\n  resetInput() {\n    this.checked = false;\n    this.error = false;\n    this.errorMessage = '';\n    this._notifyFormGroup();\n  }\n\n  private _onCheckboxChange() {\n    this.checked = !this.checked;\n    this._validate();\n    this._notifySelectionChange();\n  }\n\n  private _validate() {\n    let errorMsg = '';\n\n    if (this.required && !this.checked) {\n      errorMsg = this.errorMessage;\n    }\n\n    const previousError = this.error;\n    this.error = !!errorMsg;\n    this.errorMessage = errorMsg || this.errorMessage;\n\n    if (previousError !== this.error || !this.error) {\n      this._notifyFormGroup(!this.error);\n    }\n  }\n\n  private _notifySelectionChange() {\n    this.dispatchEvent(new CustomEvent('value-changed', {\n      detail: this.checked,\n    }));\n  }\n\n  private _notifyFormGroup(isValid: boolean = true) {\n    const formGroup = this._findFormGroup();\n    if (formGroup) {\n      formGroup.updateValidity(this.label, isValid);\n    }\n  }\n\n  private _registerWithFormGroup() {\n    const formGroup = this._findFormGroup();\n    if (formGroup) {\n      const initialValidity = !this.required || this.checked;\n      formGroup.registerInput(this.label, initialValidity);\n    }\n  }\n\n  private _findFormGroup() {\n    return this.closest('form-group') as FormGroup;\n  }\n\n  render() {\n    return html`\n      <div class=\"input-container\">\n        <div class=\"label-container\">\n          <input\n            type=\"checkbox\"\n            .checked=${this.checked}\n            @change=\"${this._onCheckboxChange}\"\n          />\n          ${this.label\n      ? html`\n              <label class=\"label\">\n                ${this.label}\n                ${this.required ? html`<span class=\"required\">*</span>` : ''}\n              </label>\n            `\n      : ''}\n        </div>\n        ${this.error ? html`<span class=\"error-message\">${this.errorMessage}</span>` : ''}\n      </div>\n    `;\n  }\n}\n"]}