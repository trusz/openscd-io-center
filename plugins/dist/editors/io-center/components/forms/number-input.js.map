{"version":3,"file":"number-input.js","sourceRoot":"","sources":["../../../../../src/editors/io-center/components/forms/number-input.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css, property, customElement } from 'lit-element';\nimport { FormGroup } from './form-group';\n\n@customElement('number-input')\nexport class NumberInput extends LitElement {\n  static styles = css`\n    :host {\n      display: block;\n      font-family: Arial, sans-serif;\n      width: 100%;\n    }\n\n    .label {\n      font-size: 1rem;\n      margin-bottom: 0.5rem;\n      color: #555;\n      display: flex;\n      align-items: center;\n    }\n\n    .label .required {\n      color: var(--input-required-color, #ff4d4d);\n      margin-left: 0.25rem;\n    }\n\n    .input-container {\n      position: relative;\n      width: 100%;\n      margin-bottom: 1rem;\n    }\n\n    input {\n      width: 100%;\n      padding: 10px;\n      font-size: 1rem;\n      border: 1px solid #ccc;\n      border-radius: 6px;\n      box-sizing: border-box;\n      outline: none;\n      transition: border-color 0.3s ease, box-shadow 0.3s ease;\n    }\n\n    input:focus {\n      border-color: #007bff;\n      box-shadow: 0 0 8px rgba(0, 123, 255, 0.25);\n    }\n\n    .error-message {\n      color: var(--input-error-color, #ff4d4d);\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n      display: none;\n    }\n\n    :host([error]) input {\n      border-color: var(--input-error-color, #ff4d4d);\n      box-shadow: 0 0 8px rgba(255, 77, 77, 0.25);\n    }\n\n    :host([error]) .error-message {\n      display: block;\n    }\n\n    :host([error]) .label {\n      color: var(--input-error-color, #ff4d4d);\n    }\n  `;\n\n  @property({ type: String }) label: string = '';\n  @property({ type: Number }) value: number | null = null;\n  @property({ type: String }) placeholder: string = '';\n  @property({ type: Number }) min: number | null = null;\n  @property({ type: Number }) max: number | null = null;\n  @property({ type: Boolean }) required: boolean = false;\n  @property({ type: Boolean, reflect: true }) error: boolean = false;\n  @property({ type: String }) errorMessage: string = 'This field is required';\n\n  firstUpdated() {\n    this._registerWithFormGroup();\n  }\n\n  resetInput() {\n    this.value = null;\n    this.error = false;\n    this.errorMessage = '';\n    this._notifyFormGroup();\n  }\n\n  private _handleInput(e: Event) {\n    const input = e.target as HTMLInputElement;\n    const value = input.valueAsNumber;\n    this.value = isNaN(value) ? null : value;\n    this._validate();\n    this._notifyValueChange();\n  }\n\n  private _validate() {\n    let errorMsg = '';\n\n    if (this.required && (this.value === null || this.value === undefined)) {\n      errorMsg = 'This field is required';\n    }\n\n    if (this.min !== null && this.value !== null && this.value < this.min) {\n      errorMsg = `Value must be greater than or equal to ${this.min}`;\n    }\n\n    if (this.max !== null && this.value !== null && this.value > this.max) {\n      errorMsg = `Value must be less than or equal to ${this.max}`;\n    }\n\n    const previousError = this.error;\n    this.error = !!errorMsg;\n    this.errorMessage = errorMsg || this.errorMessage;\n\n    if (previousError !== this.error || !this.error) {\n      this._notifyFormGroup(!this.error);\n    }\n  }\n\n  private _notifyValueChange() {\n    this.dispatchEvent(new CustomEvent('value-changed', {\n      detail: { value: this.value },\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  private _notifyFormGroup(isValid: boolean = true) {\n    const formGroup = this._findFormGroup();\n    if (formGroup) {\n      formGroup.updateValidity(this.label, isValid);\n    }\n  }\n\n  private _registerWithFormGroup() {\n    const formGroup = this._findFormGroup();\n    if (formGroup) {\n      const initialValidity = !this.required || this.value !== null;\n      formGroup.registerInput(this.label, initialValidity);\n    }\n  }\n\n  private _findFormGroup() {\n    return this.closest('form-group') as FormGroup;\n  }\n\n  render() {\n    return html`\n      <div class=\"input-container\">\n        ${this.label\n      ? html`\n              <label class=\"label\">\n                ${this.label}\n                ${this.required ? html`<span class=\"required\">*</span>` : ''}\n              </label>\n            `\n      : ''}\n        <input\n          type=\"number\"\n          .value=\"${this.value !== null ? this.value : ''}\"\n          placeholder=\"${this.placeholder}\"\n          @input=\"${this._handleInput}\"\n          .min=\"${this.min !== null ? this.min : ''}\"\n          .max=\"${this.max !== null ? this.max : ''}\"\n        />\n        ${this.error ? html`<span class=\"error-message\">${this.errorMessage}</span>` : ''}\n      </div>\n    `;\n  }\n}\n"]}