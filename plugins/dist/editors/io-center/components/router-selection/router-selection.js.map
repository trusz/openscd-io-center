{"version":3,"file":"router-selection.js","sourceRoot":"","sources":["../../../../../src/editors/io-center/components/router-selection/router-selection.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css, property, customElement, state } from 'lit-element';\nimport { SelectionItem } from \"../forms/selection-box\";\n\nimport '../forms/selection-box';\nimport '../forms/number-input';\nimport '../forms/form-group';\nimport {Connector} from \"../../interfaces/connector.interface\";\n\nexport interface RouterOptions extends SelectionItem {\n  inst: string | number;\n  inputConnectors: Connector[];\n  outputConnectors: Connector[];\n}\n\n\n@customElement('router-selection')\nexport class RouterSelection extends LitElement {\n  static styles = css`\n    :host {\n      display: block;\n      font-family: Arial, sans-serif;\n      width: 100%;\n    }\n\n    .label {\n      font-size: 1rem;\n      margin-bottom: 0.5rem;\n      color: #555;\n      display: block;\n    }\n\n    .container {\n      width: 100%;\n    }\n  `;\n\n  @property({ type: Boolean }) multiSelect: boolean = false;\n  @property({ type: String }) label: string = 'Available Routers';\n  @property({ type: String }) noItemsText: string = 'No options available';\n\n  @state()\n  private items: RouterOptions[] = [\n    {\n      label: \"LRTD\",\n      value: \"lrtd\",\n      inst: 1,\n      inputConnectors: [\n        {id: crypto.randomUUID(), text: \"lnOn\", position: 'right', type: 'input'},\n        {id: crypto.randomUUID(), text: \"lnOff\", position: 'right', type: 'input'},\n      ],\n      outputConnectors: [\n        {id: crypto.randomUUID(), text: \"DpsInd\", position: 'left', type: 'output'},\n      ]\n    },\n    {\n      label: \"LRTI\",\n      value: \"lrti\",\n      inst: 1,\n      inputConnectors: [],\n      outputConnectors: [{\n        id: crypto.randomUUID(),\n        text: 'IntInd',\n        position: 'left',\n        type: 'output',\n      }]\n    },\n    {\n      label: \"LRTB\",\n      value: \"lrtb\",\n      inst: 1,\n      inputConnectors: [{\n        id: crypto.randomUUID(),\n        text: 'in',\n        position: 'right',\n        type: 'input',\n      }],\n      outputConnectors: [{\n        id: crypto.randomUUID(),\n        text: 'SPSInd',\n        position: 'left',\n        type: 'output',\n      }]\n    }\n  ];\n\n  @state()\n  private isLrtiSelected: boolean = false;\n\n  @state()\n  private selectedRouter: any = '';\n\n  @state()\n  private lrtiInputs: number = 1;\n\n  @state()\n  private isFormValid: boolean = false;\n\n  @state() routerInstance: number = 1;\n\n  private _handleSelectionChange(event: CustomEvent) {\n    const selectedItems = event.detail.selectedItems;\n    if (selectedItems.length > 0 && !this.multiSelect) {\n      this.selectedRouter = selectedItems[0];\n\n      if (this.selectedRouter === 'lrti') {\n        this.lrtiInputs = 1;\n        this.isLrtiSelected = true;\n        this.setLrtiInputConnectors(this.lrtiInputs);\n      } else {\n        this.isLrtiSelected = false;\n      }\n\n      this.dispatchRouterOptions();\n    }\n  }\n\n  private setLrtiInputConnectors(numOfInputs: number) {\n    const inputConnectors: Connector[] = Array.from({ length: numOfInputs }).map((_, i) => ({\n      id: crypto.randomUUID(),\n      text: `in${i + 1}`,\n      position: 'right',\n      type: 'input'\n    }));\n\n    const index = this.items.findIndex(item => item.value === 'lrti');\n    if (index !== -1) {\n      this.items[index].inputConnectors = inputConnectors;\n    }\n  }\n\n  private _handleLrtiInputsChange(event: CustomEvent) {\n    this.lrtiInputs = event.detail.value;\n    this.setLrtiInputConnectors(this.lrtiInputs);\n    this.dispatchRouterOptions();\n  }\n\n  private _handleRouterInstanceChange(event: CustomEvent) {\n    this.routerInstance = event.detail.value;\n    this.dispatchRouterOptions();\n  }\n\n  private _handleFormValidityChanged(event: CustomEvent) {\n    this.isFormValid = event.detail.isValid;\n  }\n\n  private dispatchRouterOptions() {\n    const routerOptions = this.items.find(item => item.value === this.selectedRouter);\n    if (!routerOptions) {\n      return;\n    }\n\n    routerOptions.inst = this.routerInstance;\n    if (this.isFormValid) {\n      this.dispatchEvent(new CustomEvent('router-changed', {\n        detail: routerOptions,\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n\n  private renderInputForRouterInstance() {\n    if (!this.selectedRouter) {\n      return html``;\n    }\n\n    return html`\n      <number-input\n        style=\"margin-top: 1rem;\"\n        label=\"Router Instance\"\n        .placeholder=\"${'Enter a number'}\"\n        .value=\"${this.routerInstance}\"\n        .min=\"${1}\"\n        .required=\"${true}\"\n        @value-changed=\"${this._handleRouterInstanceChange}\">\n      </number-input>\n    `;\n  }\n\n  private renderNumberInputForLrti() {\n    if (!this.isLrtiSelected) {\n      return html``;\n    }\n\n    return html`\n      <number-input\n        style=\"margin-top: 1rem;\"\n        label=\"Number of LRTI Inputs\"\n        .placeholder=\"${'Enter a number'}\"\n        .value=\"${this.lrtiInputs}\"\n        .min=\"${1}\"\n        .max=\"${10}\"\n        .required=\"${true}\"\n        @value-changed=\"${this._handleLrtiInputsChange}\">\n      </number-input>\n    `;\n  }\n\n  private renderSelectionBox() {\n    return html`\n      <selection-box\n        .items=\"${this.items}\"\n        .label=\"${this.label}\"\n        .noItemsText=\"${this.noItemsText}\"\n        .multiSelect=\"${this.multiSelect}\"\n        .required=\"${true}\"\n        .errorMessage=\"${'Please select a router'}\"\n        @selection-changed=\"${this._handleSelectionChange}\">\n      </selection-box>\n    `;\n  }\n\n  render() {\n    return html`\n      <form-group @form-validity-changed=\"${this._handleFormValidityChanged}\">\n        <div class=\"container\">\n          ${this.renderSelectionBox()}\n\n          ${this.renderInputForRouterInstance()}\n\n          ${this.renderNumberInputForLrti()}\n        </div>\n      </form-group>\n    `;\n  }\n}\n"]}