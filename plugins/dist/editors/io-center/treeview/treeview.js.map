{"version":3,"file":"treeview.js","sourceRoot":"","sources":["../../../../src/editors/io-center/treeview/treeview.ts"],"names":[],"mappings":"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","sourcesContent":["import {css, html, LitElement} from 'lit';\nimport {customElement, property, state} from 'lit-element';\nimport {TreeNode} from './treenode';\n\n\nimport './treenode';\nimport '../components/forms/text-input';\n\nimport {TreeviewService} from \"./treeview.service\";\nimport {Subscription} from \"rxjs\";\nimport {ITreeNode} from \"./treenode.interface\";\nimport {DataObject} from \"../element-manager/data-object\";\n\n@customElement('tree-view')\nexport class TreeView extends LitElement {\n  @state() private rootNode: ITreeNode | undefined = undefined;\n  @state() searchTerm: string = '';\n  @state() private selectedNodeId: string | null = null;\n\n\n  private treeviewService = TreeviewService.getInstance();\n  private subList: Subscription[] = [];\n\n  constructor() {\n    super();\n    this.subList.push(\n      this.treeviewService.treeDataObjects$.subscribe((dataObjects) => {\n        if (dataObjects && dataObjects.length > 0) {\n          this.rootNode = this.createTreeView(dataObjects);\n          this.requestUpdate();\n        } else {\n          console.warn('No dataObjects found');\n        }\n      })\n    );\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.subList.forEach(sub => sub.unsubscribe());\n  }\n\n  createTreeView(dataObjects: DataObject[]): ITreeNode {\n    const tree: ITreeNode[] = [];\n\n    // Group by ldRef\n    const ldRefGroups = this.groupBy(dataObjects, 'ldRef');\n    for (const [ldRef, ldRefDataObjects] of Object.entries(ldRefGroups)) {\n      const ldNode: ITreeNode = {\n        name: ldRef,\n        children: [],\n        expanded: true\n      };\n\n      // Group by lnType-lnInst within each ldRef\n      const lnTypeInstGroups = this.groupBy(ldRefDataObjects, (obj) => `${obj.lnClass}-${obj.lnInst}`);\n      for (const [lnTypeInst, lnTypeInstDataObjects] of Object.entries(lnTypeInstGroups)) {\n        const lnNode: ITreeNode = {\n          name: lnTypeInst,\n          children: [],\n          expanded: true\n        };\n\n        // Add leaf nodes (names)\n        lnNode.children = lnTypeInstDataObjects.map((dataObject) => ({\n          name: dataObject.name,\n          dataObject: dataObject,\n          children: [],\n          expanded: false\n        }));\n\n        // Add to ldNode's children\n        ldNode.children!.push(lnNode);\n      }\n\n      // Add to the tree\n      tree.push(ldNode);\n    }\n\n    // Return the root node without a name, but include its children\n    return {\n      name: \"\",\n      children: tree,\n      expanded: true\n    };\n  }\n\n  private groupBy<T>(array: T[], key: keyof T | ((item: T) => string)): Record<string, T[]> {\n    return array.reduce((result, currentValue) => {\n      const groupKey = typeof key === 'function' ? key(currentValue) : String(currentValue[key]);\n      if (!result[groupKey]) {\n        result[groupKey] = [];\n      }\n      result[groupKey].push(currentValue);\n      return result;\n    }, {} as Record<string, T[]>);\n  }\n\n  filterNodes(node: ITreeNode, searchTerm: string): ITreeNode | null {\n    const isMatch = node.name.toLowerCase().includes(searchTerm);\n\n    const filteredChildren = node.children\n      ?.map((child) => this.filterNodes(child, searchTerm))\n      .filter((child) => child !== null) as ITreeNode[];\n\n    if (isMatch || filteredChildren.length > 0) {\n      return {\n        ...node,\n        expanded: true,\n        children: filteredChildren.length > 0 ? filteredChildren : node.children,\n      };\n    }\n\n    return null;\n  }\n\n  private getTreeViewError(msg: string) {\n    return html`\n      <span class=\"treeview-error\">${msg}</span>\n    `;\n  }\n\n  getFilteredTreeView() {\n    if (!this.rootNode) {\n      return this.getTreeViewError('No root node found');\n    }\n\n    if (this.rootNode.children?.length === 0) {\n      return this.getTreeViewError('No suitable options found');\n    }\n\n    const filteredRootNode = this.filterNodes(this.rootNode, this.searchTerm);\n\n    if (!filteredRootNode || !filteredRootNode.children) {\n      return this.getTreeViewError('No matching nodes found');\n    }\n\n    return html`\n      ${filteredRootNode.children.map(child => html`\n      <tree-node\n        .level=\"${0}\"\n        .node=\"${child}\"\n        .expanded=\"${true}\"\n        .searchTerm=\"${this.searchTerm}\">\n      </tree-node>\n    `)}\n    `;\n  }\n\n  clear() {\n    const firstTreeNode = this.shadowRoot?.querySelector('tree-node') as TreeNode;\n\n    if (firstTreeNode) {\n      this.clearNode(firstTreeNode, true);\n    }\n  }\n\n  clearNode(node: TreeNode, isRoot = false) {\n    if (!isRoot) {\n      node.expanded = false;\n    }\n\n    const childNodes = node.shadowRoot?.querySelectorAll('tree-node') as NodeListOf<TreeNode>;\n    childNodes.forEach((childNode) => {\n      this.clearNode(childNode);\n    });\n  }\n\n  private renderSearchInput() {\n    return html`\n      <text-input\n        .placeholder=\"${'Search LN'}\"\n        .value=\"${this.searchTerm}\"\n        icon=\"search\"\n        @value-changed=${(e: CustomEvent) => this.handleSearch(e.detail)}\n      ></text-input>\n    `;\n  }\n\n  private handleSearch(searchTerm: string) {\n    this.searchTerm = searchTerm.toLowerCase();\n    this.requestUpdate();\n  }\n\n  render() {\n    return html`\n      <div class=\"treeview-container\">\n        <div class=\"treeview-header\">\n          ${this.renderSearchInput()}\n        </div>\n        <div class=\"treeview-content\">\n          ${this.getFilteredTreeView()}\n        </div>\n      </div>\n    `;\n  }\n\n  static styles = css`\n    .treeview-container {\n      height: calc(100vh - 250px);\n      width: 100%;\n      background-color: #fdf5e3;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      overflow-y: auto;\n      overflow-x: hidden;\n    }\n\n    .treeview-header {\n      width: 95%;\n      padding: 0 0.5rem;\n    }\n\n    .treeview-content {\n      width: 100%;\n      overflow-y: auto;\n      height: 100%;\n    }\n\n    .treeview-container .treeview-error {\n      color: red;\n      width: 100%;\n      display: flex;\n      justify-content: center;\n      padding-top: 1rem;\n    }\n  `;\n}\n"]}