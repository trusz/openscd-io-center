{"version":3,"file":"treenode.js","sourceRoot":"","sources":["../../../../src/editors/io-center/treeview/treenode.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property, PropertyValues, state} from 'lit-element';\nimport '@material/mwc-icon';\nimport {ElementManagerService} from \"../element-manager/element-manager.service\";\nimport {DataObject} from \"../element-manager/data-object\";\nimport {Subscription} from \"rxjs\";\nimport {TreeviewService} from \"./treeview.service\";\nimport {ITreeNode} from \"./treenode.interface\";\nimport {ConnectionManagerService} from \"../connection-manager/connection-manager.service\";\n\n@customElement('tree-node')\nexport class TreeNode extends LitElement {\n  @property({type: String}) path: string = '';\n  @property({type: Object}) node: ITreeNode = undefined!;\n  @property({type: Boolean}) expanded: boolean = false;\n  @property({type: Number}) level: number = 0;\n  @property({type: Boolean}) addedToEditor: boolean = false;\n  @property({type: String}) searchTerm: string = '';\n\n  @state() isSelected: boolean = false;\n  @state() currentSelectedNode: DataObject | undefined;\n\n  private subList: Subscription[] = [];\n\n  private elementManager = ElementManagerService.getInstance();\n  private treeviewService = TreeviewService.getInstance();\n  private connectionManager = ConnectionManagerService.getInstance();\n\n  constructor() {\n    super();\n  }\n\n  protected firstUpdated(_changedProperties: PropertyValues) {\n    super.firstUpdated(_changedProperties);\n    this.expanded = false;\n    this.subList.push(this.treeviewService.selectedDataObject$.subscribe((node: DataObject) => {\n      this.currentSelectedNode = node;\n      this.elementManager.clearDataObjects();\n      this.connectionManager.clearConnections();\n\n      if (!node) {\n        this.isSelected = false;\n      } else {\n        this.isSelected = node.id === this.node.dataObject?.id;\n      }\n    }));\n  }\n\n  protected shouldUpdate(changedProperties: PropertyValues) {\n    return changedProperties.has('node') || changedProperties.has('expanded') || changedProperties.has('isSelected');\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.subList.forEach(sub => sub.unsubscribe());\n  }\n\n  toggleExpand() {\n    if (this.node?.children && this.node?.children.length > 0) {\n      this.expanded = !this.expanded;\n      this.requestUpdate();\n    }\n  }\n\n  private matchesSearch(): boolean {\n    if (!this.searchTerm) {\n      return false;\n    }\n\n    const isMatch = this.node.name.toLowerCase().includes(this.searchTerm);\n    const childMatches = this.node.children?.some(child =>\n      child.name.toLowerCase().includes(this.searchTerm) || this.childHasMatch(child)\n    );\n\n    return isMatch || !!childMatches;\n  }\n\n  private childHasMatch(child: ITreeNode): boolean {\n    return child.children?.some(grandChild =>\n      grandChild.name.toLowerCase().includes(this.searchTerm) || this.childHasMatch(grandChild)\n    ) || false;\n  }\n\n  selectNode(node: ITreeNode) {\n    if (this.isSelected) {\n      return;\n    }\n\n    const dataObject = node.dataObject;\n    if (!dataObject) {\n      console.error('Data Object not found! Node:', node);\n      return;\n    }\n\n    const previousSelectedNode = this.currentSelectedNode;\n    if (previousSelectedNode) {\n      this.elementManager.deleteDataObjectById(previousSelectedNode.id);\n    }\n\n    this.treeviewService.setSelectedDataObject(dataObject);\n    this.elementManager.addDataObject(dataObject);\n  }\n\n  private renderCaretIcon(isLeaf: boolean) {\n    if (isLeaf) return null;\n    return html`\n      <mwc-icon class=\"caret\">\n        ${this.expanded ? 'expand_more' : 'chevron_right'}\n      </mwc-icon>\n    `;\n  }\n\n  private renderChildren(isLeaf: boolean) {\n    if (!isLeaf && this.expanded) {\n      return html`\n        <div class=\"children\">\n          ${this.node.children\n            .filter(child => !!child)\n            .map(child => html`\n            <tree-node\n              .node=\"${child}\"\n              .searchTerm=\"${this.searchTerm}\"\n              .expanded=\"${child.expanded || this.matchesSearch()}\"\n            ></tree-node>`\n            )}\n        </div>\n      `;\n    }\n    return null;\n  }\n\n  private renderText(isLeaf: boolean) {\n    if (isLeaf) {\n      return html`\n        <span class=\"leafText isLeaf\" @click=\"${() => this.selectNode(this.node)}\">\n        ${this.node.name}\n      </span>`\n    }\n\n    return html`\n      <span class=\"leafText\" @click=\"${() => this.toggleExpand()}\">\n        ${this.node.name}\n      </span>\n    `;\n  }\n\n  render() {\n    if (!this.node) {\n      return html`<div>No data available</div>`;\n    }\n\n    const isLeaf = !this.node?.children || this.node?.children.length === 0;\n    const lastSelectedDataObject = this.treeviewService.lastSelectedDataObject;\n\n    if (lastSelectedDataObject) {\n      this.isSelected = this.node.dataObject?.id === lastSelectedDataObject.id;\n    }\n\n    return html`\n      <div\n        class=\"node ${isLeaf ? 'leaf' : ''} ${this.isSelected ? 'highlight' : ''}\"\n        @click=\"${this.toggleExpand}\">\n        ${this.renderCaretIcon(isLeaf)}\n        ${this.renderText(isLeaf)}\n      </div>\n      ${this.renderChildren(isLeaf)}\n    `;\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      font-family: 'Arial', sans-serif;\n    }\n\n    .node {\n      padding: 8px 12px;\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      position: relative;\n      transition: background-color 0.2s ease, color 0.2s ease;\n    }\n\n    .highlight {\n      background-color: #e0e0e0;\n      color: #000;\n    }\n\n    .caret {\n      margin-right: 8px;\n      font-size: 16px;\n      color: #555;\n      transition: transform 0.2s ease;\n    }\n\n    .caret.collapsed {\n      transform: rotate(0deg);\n    }\n\n    .caret.expanded {\n      transform: rotate(90deg);\n    }\n\n    .leafText {\n      font-size: 14px;\n      color: #333;\n      transition: color 0.3s ease;\n    }\n\n    .leafText:hover {\n      color: #0073e6;\n      font-weight: bold;\n    }\n\n    .children {\n      padding-left: 16px;\n      border-left: 1px solid #d0d0d0;\n      margin-left: 8px;\n    }\n\n    .children.expanded {\n      max-height: 1000px;\n      opacity: 1;\n      transition: max-height 0.3s ease, opacity 0.3s ease;\n    }\n\n    .children.collapsed {\n      max-height: 0;\n      opacity: 0;\n      pointer-events: none;\n    }\n  `;\n}\n"]}