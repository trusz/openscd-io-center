{"version":3,"file":"io-center-container.js","sourceRoot":"","sources":["../../../src/editors/io-center/io-center-container.ts"],"names":[],"mappings":"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","sourcesContent":["import {css, customElement, html, property, PropertyValues, query, state, TemplateResult} from \"lit-element\";\nimport {IoCenterFoundation} from \"./foundation\";\nimport {getDescriptionAttribute, getNameAttribute,} from '@openscd/open-scd/src/foundation.js';\nimport {nothing} from \"lit-html\";\n\n\nimport './treeview/treeview';\nimport './graphical-editor/graphical-editor';\nimport './lp-list/lp-list';\nimport './components/io-center-modal';\nimport './components/forms/openscd-button';\nimport './components/router-selection/router-selection';\n\nimport {GraphicalEditor} from \"./graphical-editor/graphical-editor\";\nimport {RectangleOptions} from \"./graphical-editor/rectangle.options\";\nimport {TreeView} from \"./treeview/treeview\";\nimport {LpList} from \"./lp-list/lp-list\";\nimport {ILogicalNode} from \"./interfaces/logical-node.interface\";\nimport {RouterOptions} from \"./components/router-selection/router-selection\";\nimport {Subscription} from 'rxjs';\nimport {ElementManagerService} from \"./element-manager/element-manager.service\";\nimport {DataObject, DataObjectConnector} from \"./element-manager/data-object\";\nimport {Connector} from \"./interfaces/connector.interface\";\nimport {ConnectionManagerService} from \"./connection-manager/connection-manager.service\";\nimport {checkIfLNRefExists, getLPsFromIED, getParentLN, writeXMLDictToXML} from \"./utils/xml-util\";\nimport {ConnectionObject} from \"./connection-manager/connection-object\";\nimport {LpDataService} from \"./lp-list/lp-data.service\";\nimport {TreeviewService} from \"./treeview/treeview.service\";\n\n@customElement('io-center-container')\nexport class IoCenterContainer extends IoCenterFoundation {\n  @property({type: String}) currentIed: string = '';\n\n  @query('graphical-editor') graphicalEditor!: GraphicalEditor;\n  @query('tree-view') treeView!: TreeView;\n  @query('lp-list') lpList!: LpList;\n\n  @state() private lpModels: ILogicalNode[] = [];\n  @state() private currentSelectedRouter: RouterOptions | undefined = undefined;\n  @state() private showModal = false;\n  @state() private isFormValid = false;\n\n  private subList: Subscription[] = [];\n\n  private elementManager = ElementManagerService.getInstance();\n  private connectionManager = ConnectionManagerService.getInstance();\n  private lpDataService = LpDataService.getInstance();\n  private treeviewService = TreeviewService.getInstance();\n\n  constructor() {\n    super();\n    this.subList.push(this.elementManager.dataObjectAdded$.subscribe((dataObject) => {\n      const connectionObjects: ConnectionObject[] = [];\n\n      const options = this.generateRectangleOptions(dataObject);\n      if (!options) {\n        console.error(\"Rectangle options not found for data object:\", dataObject);\n        return;\n      }\n\n      if (dataObject.type === \"DO\") {\n        this.graphicalEditor.clearAllRectangles();\n        const lnRefElement = checkIfLNRefExists(this.doc, dataObject.ldRef, dataObject.lnClass, dataObject.lnInst, dataObject.connectors[0].name, this.currentIed);\n        if (lnRefElement) {\n          const routerElement = getParentLN(lnRefElement);\n          if (routerElement) {\n            const connections = this.processRouterLN(routerElement, dataObject);\n            connectionObjects.push(...connections);\n          }\n        }\n      }\n\n      // Add clicked DO to the graphical editor\n      this.graphicalEditor.addRectangle(options);\n\n      // Adding all connection here because objects should be rendered and in the DOM\n      if (connectionObjects.length > 0) {\n        connectionObjects.forEach(connection => {\n          this.connectionManager.addConnectionObject(connection);\n        });\n      }\n    }));\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.subList.forEach(sub => sub.unsubscribe());\n  }\n\n  private generateRectangleOptions(dataObject: DataObject): RectangleOptions | undefined {\n    if (dataObject.type === \"DO\") {\n      return this.generateDORectangleOptions(dataObject);\n    }\n\n    if (dataObject.type === \"LP\") {\n      return this.generateLPRectangleOptions(dataObject);\n    }\n\n    if (dataObject.type === \"ROUTER\") {\n      return this.generateRouterRectangleOptions(dataObject);\n    }\n\n    return undefined;\n  }\n\n  private generateRouterRectangleOptions(dataObject: DataObject): RectangleOptions {\n    const height = dataObject.connectors.length * 40;\n\n    return {\n      id: dataObject.id,\n      text: dataObject.name + \"-\" + dataObject.lnInst,\n      type: dataObject.type,\n      rectanglePosition: \"middle\",\n      width: 200,\n      height: height,\n      inputConnectors: dataObject.connectors\n        .filter(connector => connector.type === \"input\")\n        .map(connector => ({text: connector.name, position: \"right\", type: \"input\", id: connector.id})),\n      outputConnectors: dataObject.connectors\n        .filter(connector => connector.type === \"output\")\n        .map(connector => ({text: connector.name, position: \"left\", type: \"output\", id: connector.id})),\n      onDelete: () => this.elementManager.deleteDataObjectById(dataObject.id),\n      onConnectorEdit: () => console.log(\"Connector edit not implemented yet\")\n    }\n  }\n\n  private generateLPRectangleOptions(dataObject: DataObject): RectangleOptions {\n    return {\n      id: dataObject.id,\n      text: dataObject.name + \"-\" + dataObject.lnInst,\n      type: dataObject.type,\n      rectanglePosition: \"right\",\n      width: 200,\n      height: 100,\n      outputConnectors: dataObject.connectors.filter(connector => connector.type === \"output\")\n        .map(connector => ({text: connector.name, position: \"left\", type: \"output\", id: connector.id})),\n      onDelete: () => this.elementManager.deleteDataObjectById(dataObject.id),\n      onConnectorEdit: () => console.log(\"Connector edit not implemented yet\")\n    }\n  }\n\n  private generateDORectangleOptions(dataObject: DataObject) {\n    const options: RectangleOptions = {\n      id: dataObject.id,\n      text: dataObject.path,\n      type: dataObject.type,\n      rectanglePosition: \"left\",\n      width: 200,\n      height: 100,\n      inputConnectors: dataObject.connectors.filter(connector => connector.type === \"input\")\n        .map(connector => ({text: connector.name, position: \"right\", type: \"input\", id: connector.id})),\n      onRouterAdd: () => this.showModal = true\n    }\n    return options;\n  }\n\n  private header(): TemplateResult {\n    const name = getNameAttribute(this.element);\n    const desc = getDescriptionAttribute(this.element);\n    return html`${name}${desc ? html` &mdash; ${desc}` : nothing}`;\n  }\n\n  private renderTreeView() {\n    return html`\n      <tree-view\n        style=\"width: 100%\"\n      </tree-view>`\n  }\n\n  private generateConnector(connector: Connector, type: \"input\" | \"output\"): DataObjectConnector {\n    return {\n      id: crypto.randomUUID(),\n      name: connector.text,\n      type\n    }\n  }\n\n  private _handleModalClose(event: CustomEvent) {\n    this.showModal = false;\n\n    if (!event.detail) {\n      this.currentSelectedRouter = undefined;\n      return;\n    }\n\n    if (!this.currentSelectedRouter) {\n      console.error(\"Current selected router not found\");\n      return;\n    }\n\n    const routerName = this.currentSelectedRouter?.value.toUpperCase()\n    if (!routerName) {\n      console.error(\"Router name not found\");\n      return;\n    }\n\n    const inputConnectors = this.currentSelectedRouter?.inputConnectors.map(connector => this.generateConnector(connector, \"input\"));\n    const outputConnectors = this.currentSelectedRouter?.outputConnectors.map(connector => this.generateConnector(connector, \"output\"));\n\n    const dataObject: DataObject = {\n      id: crypto.randomUUID(),\n      name: routerName,\n      type: \"ROUTER\",\n      lnInst: this.currentSelectedRouter.inst.toString(),\n      ldRef: \"LD0\",\n      lnClass: routerName,\n      connectors: [...inputConnectors, ...outputConnectors]\n    }\n\n    this.elementManager.addDataObject(dataObject);\n  }\n\n  private _handleFormValidityChanged(event: CustomEvent) {\n    this.isFormValid = event.detail.isValid;\n  }\n\n  /*\n  Function for updating the LP models\n   */\n  updateLpModels() {\n    this.lpDataService.clearLpData();\n    const lpNodes = getLPsFromIED(this.doc, this.currentIed);\n    const lpDataObjects: DataObject[] = []\n    lpNodes.forEach((node: Element) => {\n      const name = node.getAttribute('lnClass');\n      if (!name) {\n        console.error(\"LN Class not found in node:\", node);\n        return;\n      }\n\n      const inst = node.getAttribute('inst');\n      if (!inst) {\n        console.error(\"LN Instance not found in node:\", node);\n        return;\n      }\n\n      const type = node.getAttribute('lnType');\n      if (!type) {\n        console.error(\"LN Type not found in node:\", node);\n        return;\n      }\n\n      const connectorType = name.endsWith(\"I\") ? \"output\" : \"input\";\n      const connectors: DataObjectConnector[] = [{\n        id: crypto.randomUUID(),\n        name: 'Ind',\n        type: connectorType\n      }];\n\n      lpDataObjects.push({\n        id: crypto.randomUUID(),\n        name: name,\n        type: 'LP',\n        lnClass: type,\n        ldRef: 'LD0',\n        lnInst: inst,\n        connectors: connectors\n      });\n    });\n\n    this.lpDataService.setLpData(lpDataObjects);\n  }\n\n  /*\n  Function for updating the tree data objects\n   */\n  updateTreeDataObjects() {\n    this.treeviewService.clearTreeDataObjects();\n    this.elementManager.clearDataObjects();\n    this.graphicalEditor.clearAllRectangles();\n    this.treeviewService.parseDataObjectsFromXML(this.doc, this.currentIed, ['sps', 'dps', 'dpc', 'inc', 'ins', 'pos']);\n  }\n\n  firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n    this.updateLpModels();\n    this.updateTreeDataObjects();\n  }\n\n  updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n\n    if (changedProperties.has('currentIed')) {\n      this.updateLpModels();\n      this.updateTreeDataObjects();\n    }\n\n    if (changedProperties.has('doc')) {\n      this.updateLpModels();\n      this.updateTreeDataObjects();\n    }\n  }\n\n  saveEditor() {\n    const routers = this.elementManager.getRouters();\n    const xmlDict: any = {};\n\n    routers.forEach(router => {\n      xmlDict[router.id] = {\n        name: router.name,\n        inst: router.lnInst,\n        type: router.lnClass,\n        dois: {}\n      }\n\n      router.connectors.forEach(connector => {\n        const connectorObj = this.connectionManager.findConnectionToOrFromConnector(connector.id);\n        if (!connectorObj) {\n          console.log(\"Connector not found:\", connector.id);\n          xmlDict[router.id].dois[connector.id] = {\n            name: connector.name,\n            desc: connector.type,\n            lnRef: {}\n          }\n          return;\n        }\n\n        // Check for correct id, source and target can be interchanged\n        const targetConnectorId = connectorObj.sourceConnectorId === connector.id ? connectorObj.targetConnectorId : connectorObj.sourceConnectorId;\n\n        const targetDataObject = this.elementManager.getDataObjectByConnectorId(targetConnectorId);\n        if (!targetDataObject) {\n          console.log(\"Target Data Object not found:\", targetConnectorId);\n          return;\n        }\n\n        const targetConnector = targetDataObject.connectors.find(connector => connector.id === targetConnectorId);\n\n        if (!targetConnector) {\n          console.log(\"Target Connector not found:\", targetConnectorId);\n          return;\n        }\n\n        xmlDict[router.id].dois[connector.id] = {\n          name: connector.name,\n          desc: connector.type,\n          lnRef: {\n            refLDInst: targetDataObject.ldRef,\n            refLNClass: targetDataObject.lnClass,\n            refLNInst: targetDataObject.lnInst,\n            refDO: targetConnector.name\n          }\n        }\n      });\n    });\n\n    writeXMLDictToXML(xmlDict, this.currentIed, this.doc);\n  }\n\n  /*\n  Function for processing data when loading XML\n   */\n  processRouterLN(routerLN: Element, lnRefDataObject: DataObject): ConnectionObject[] {\n    if (!routerLN) {\n      console.error(\"Provided router LN element is null or undefined.\");\n      return [];\n    }\n\n    const name = routerLN.getAttribute('lnClass');\n    const inst = routerLN.getAttribute('inst');\n    const type = routerLN.getAttribute('lnType');\n\n    const connectionList: ConnectionObject[] = [];\n\n    const routerDataObject: DataObject = {\n      id: crypto.randomUUID(),\n      name: name!,\n      type: 'ROUTER',\n      lnInst: inst!,\n      ldRef: 'LD0',\n      lnClass: type!,\n      connectors: []\n    }\n\n    // Iterate over each DOI element within the router LN\n    const doiElements = routerLN.querySelectorAll('DOI');\n    doiElements.forEach(doi => {\n      const doiName = doi.getAttribute('name');\n      const doiDesc = doi.getAttribute('desc');\n\n      if (!doiDesc) {\n        console.error(\"DOI description not found. Its needed to define if a DOI is input or output!\");\n        return;\n      }\n\n      const doiConnector: DataObjectConnector = {\n        id: crypto.randomUUID(),\n        name: doiName || '',\n        type: doiDesc as \"input\" | \"output\"\n      }\n\n      routerDataObject.connectors.push(doiConnector);\n\n      // Iterate over each LNRef element within the DOI\n      const lnRefElements = doi.querySelectorAll('LNRef');\n      lnRefElements.forEach(lnRef => {\n        const refLDInst = lnRef.getAttribute('refLDInst');\n        const refLNClass = lnRef.getAttribute('refLNClass');\n        const refLNInst = lnRef.getAttribute('refLNInst');\n        const refDO = lnRef.getAttribute('refDO');\n\n        if (refLDInst === lnRefDataObject.ldRef &&\n          refLNClass === lnRefDataObject.lnClass &&\n          refLNInst === lnRefDataObject.lnInst && refDO === lnRefDataObject.connectors[0].name) {\n          connectionList.push({\n            id: crypto.randomUUID(),\n            sourceConnectorId: doiConnector.id,\n            targetConnectorId: lnRefDataObject.connectors[0].id\n          })\n\n          // Return because we don't want to add the lnRefDataObject to the element manager here\n          return;\n        }\n\n        const dataObject = this.lpDataService.getLPDataId(refLNClass!, refLNInst!);\n        if (!dataObject) {\n          console.error(\"Data Object not found for LNRef:\", lnRef);\n          return;\n        }\n\n        // Add LPs to the element manager\n        this.elementManager.addDataObject(dataObject);\n\n        // Create connection object\n        connectionList.push({\n          id: crypto.randomUUID(),\n          sourceConnectorId: doiConnector.id,\n          targetConnectorId: dataObject.connectors[0].id\n        })\n      });\n    });\n\n    this.elementManager.addDataObject(routerDataObject);\n    return connectionList;\n  }\n\n  render(): TemplateResult {\n    return html`\n      <io-center-modal\n        .open=\"${this.showModal}\"\n        title=\"Select Router\"\n        modalHeight=\"400px\"\n        @close=\"${this._handleModalClose}\"\n        .disabled=\"${!this.isFormValid}\"\n        confirmText=\"Select\">\n        <form-group @form-validity-changed=\"${this._handleFormValidityChanged}\">\n          <router-selection\n            @router-changed=\"${(e: CustomEvent) => this.currentSelectedRouter = e.detail}\"></router-selection>\n        </form-group>\n      </io-center-modal>\n\n      <div class=\"io-center-container\">\n        <div class=\"io-center-header\">\n          <div class=\"left\">\n            <span>${this.header()}</span>\n          </div>\n\n          <div class=\"middle\">\n            <openscd-button\n              icon=\"save\"\n              label=\"Save\"\n              @button-click=\"${() => this.saveEditor()}\">\n            </openscd-button>\n            <lp-editor\n              .doc=\"${this.doc}\">\n            </lp-editor>\n          </div>\n\n          <div class=\"right\"></div>\n        </div>\n\n        <div class=\"io-center-content\">\n          <div class=\"treeview\">\n            ${this.renderTreeView()}\n          </div>\n\n          <div class=\"graphical-editor\">\n            <graphical-editor></graphical-editor>\n          </div>\n\n          <div class=\"lp-selector\">\n            <lp-list\n              .data=\"${this.lpModels}\"\n              .doc=\"${this.doc}\"\n            </lp-list>\n          </div>\n        </div>\n      </div>`\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      height: 100%;\n    }\n\n    .io-center-container {\n      height: 100%;\n      width: 100%;\n      display: flex;\n      flex-direction: column;\n      background-color: #fdf5e3;\n      border: 1px solid #cccccc;\n      border-radius: 5px;\n      box-sizing: border-box;\n    }\n\n    .io-center-header {\n      height: 50px;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: space-between;\n      background-color: #fdf5e3;\n      font-size: 20px;\n      padding: 0.5rem;\n      font-weight: bold;\n    }\n\n    .io-center-header .middle {\n      display: flex;\n      align-items: center;\n      flex-direction: row;\n    }\n\n    .io-center-content {\n      height: 100%;\n      display: grid;\n      grid-template-columns: auto 1fr auto;\n      grid-template-rows: 1fr;\n      gap: 0 0;\n      grid-auto-flow: row;\n      grid-template-areas:\n    \"treeview graphical-editor lp-selector\";\n    }\n\n    .treeview {\n      grid-area: treeview;\n      width: 300px;\n      background-color: #fdf5e3;\n      height: auto;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      padding-top: 0.5rem;\n    }\n\n    .graphical-editor {\n      grid-area: graphical-editor;\n      background-color: #eee8d5;\n      height: 100%;\n    }\n\n    .lp-selector {\n      grid-area: lp-selector;\n      width: 300px;\n      background-color: #fdf5e3;\n      height: auto;\n    }\n  `\n}\n"]}