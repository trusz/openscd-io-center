{"version":3,"file":"graphical-editor.js","sourceRoot":"","sources":["../../../../src/editors/io-center/graphical-editor/graphical-editor.ts"],"names":[],"mappings":"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","sourcesContent":["import {css, customElement, html, state} from \"lit-element\";\nimport {IoCenterFoundation} from \"../foundation\";\nimport {RectangleFactory} from \"./rectangle-factory\";\nimport {RectangleOptions} from \"./rectangle.options\";\nimport '@material/mwc-icon';\nimport './action-overlay/action-overlay';\nimport '../components/icon-button';\nimport {Subscription} from \"rxjs\";\nimport {ElementManagerService} from \"../element-manager/element-manager.service\";\nimport {Rectangle} from \"./rectangle\";\nimport {ConnectionManagerService} from \"../connection-manager/connection-manager.service\";\nimport {ConnectionObject} from \"../connection-manager/connection-object\";\n\nexport interface Connection {\n  from: HTMLElement;\n  to: HTMLElement;\n  line: SVGLineElement;\n}\n\n@customElement(\"graphical-editor\")\nexport class GraphicalEditor extends IoCenterFoundation {\n  @state() rectangles: Rectangle[] = [];\n  @state() connectionMap: Map<string, Connection | undefined> = new Map();\n\n  private rectangleFactory = new RectangleFactory(this.shadowRoot!);\n  private subList: Subscription[] = [];\n  private elementManager = ElementManagerService.getInstance();\n  private connectionManager = ConnectionManagerService.getInstance();\n\n  constructor() {\n    super();\n    this.setupEventListeners();\n    this.subscribeToDeletion();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.subList.forEach(sub => sub.unsubscribe());\n  }\n\n  protected firstUpdated(_changedProperties: Map<string | number | symbol, unknown>) {\n    super.firstUpdated(_changedProperties);\n\n    this.subList.push(\n      this.connectionManager.connectionAdded$.subscribe((connection) => {\n          // Find the `from` and `to` elements based on connection object\n          const fromElement = this.shadowRoot!.getElementById(connection.sourceConnectorId);\n          const toElement = this.shadowRoot!.getElementById(connection.targetConnectorId);\n\n          if (fromElement && toElement) {\n            this.createConnection(fromElement, toElement, connection.id);\n          } else {\n            console.warn(\"Could not find elements for connection:\", connection);\n          }\n        }\n      ));\n\n    this.subList.push(\n      this.connectionManager.connectionDeleted$.subscribe((connection) => {\n        this.removeLine(connection.id);\n      })\n    )\n\n    setTimeout(() => {\n      this.correctInitialPositions();\n    }, 10);\n  }\n\n  correctInitialPositions() {\n    const gridContainer = this.shadowRoot!.querySelector(\".grid-container\") as HTMLElement;\n\n    if (gridContainer) {\n      gridContainer.offsetHeight;\n      this.updateConnections();\n    }\n  }\n\n  clearAllRectangles() {\n    this.connectionMap.forEach((conn, id) => {\n      this.removeLine(id);\n    });\n    this.connectionMap.clear();\n\n    this.rectangles.forEach(rectangle => {\n      this.removeRectangle(rectangle);\n    });\n    this.rectangles = [];\n  }\n\n  private setupEventListeners() {\n    this.addEventListener('click', this.handleGridClick.bind(this));\n\n    const gridContainer = this.shadowRoot!.querySelector(\".grid-container\");\n    if (gridContainer) {\n      gridContainer.addEventListener('scroll', this.updateConnections.bind(this));\n    }\n  }\n\n  private subscribeToDeletion() {\n    this.subList.push(\n      this.elementManager.dataObjectDeleted$.subscribe((dataObject) => {\n        this.removeRectangleById(dataObject.id);\n        if (dataObject.type === 'DO') {\n          this.clearAllRectangles();\n          this.elementManager.clearDataObjects();\n        }\n      })\n    );\n  }\n\n  private handleGridClick(event: MouseEvent) {\n    if (!this.isRectangleElement(event)) {\n    }\n  }\n\n  private isRectangleElement(event: MouseEvent): boolean {\n    return !!event.composedPath().find(el => (el as HTMLElement).classList?.contains('rectangle'));\n  }\n\n  addRectangle(options: RectangleOptions) {\n    const rectangle = this.rectangleFactory.createRectangle(\n      options,\n      this.startConnection.bind(this)\n    );\n\n    if (!rectangle || !rectangle.element) {\n      console.warn(\"Failed to create or append rectangle\");\n      return;\n    }\n\n    this.positionAndAppendRectangle(rectangle, options);\n    this.rectangles.push(rectangle);\n    setTimeout(() => {\n      this.updateConnections();\n    }, 10);\n  }\n\n  private positionAndAppendRectangle(rectangle: Rectangle, options: RectangleOptions) {\n    const rect = rectangle.element;\n    const gridContainer = this.shadowRoot!.querySelector(\".grid-container\")!;\n    const {x, y} = this.calculateRectanglePosition(options, gridContainer);\n\n    rect.style.left = `${x}px`;\n    rect.style.top = `${y}px`;\n\n    rect.addEventListener('click', (event) => this.onRectangleClick(event, rectangle, options));\n    rect.addEventListener('mousedown', (event) => this.handleRectangleMouseDown(event, rectangle));\n\n    gridContainer.appendChild(rect);\n  }\n\n  private calculateRectanglePosition(options: RectangleOptions, container: Element) {\n    const containerRect = container.getBoundingClientRect();\n    const margin = 10;\n    let x = margin;\n    let y = margin;\n\n    const rectanglesInSamePosition = this.rectangles.filter(rect =>\n      rect.options.rectanglePosition === options.rectanglePosition\n    );\n\n    if (rectanglesInSamePosition.length > 0) {\n      const lastRect = rectanglesInSamePosition[rectanglesInSamePosition.length - 1].element.getBoundingClientRect();\n      y = lastRect.bottom - containerRect.top + margin;\n    }\n\n    switch (options.rectanglePosition) {\n      case 'left':\n        x = margin;\n        break;\n      case 'middle':\n        x = (containerRect.width / 2) - (options.width / 2);\n        break;\n      case 'right':\n        x = containerRect.width - options.width - margin;\n        break;\n    }\n\n    return {x, y};\n  }\n\n  private onRectangleClick(event: MouseEvent, rectangle: Rectangle, options: RectangleOptions) {\n    event.stopPropagation();\n    this.selectRectangle(rectangle);\n  }\n\n  selectRectangle(rect: Rectangle) {\n    this.rectangles.forEach(rectangle => rectangle.element.classList.remove('selected'));\n    rect.element.classList.add('selected');\n  }\n\n  removeRectangle(rectangle: Rectangle) {\n    if (!rectangle) {\n      console.error('Attempted to remove a non-existent rectangle');\n      return;\n    }\n\n    this.removeConnections(rectangle);\n    this.removeRectangleElement(rectangle);\n  }\n\n  private removeConnections(rectangle: Rectangle) {\n    const connectors = Array.from(rectangle.element.querySelectorAll('.connector'));\n    connectors.forEach(connector => {\n      const connectorId = connector.getAttribute('id');\n      if (!connectorId) return;\n\n      // Find connections associated with the connector\n      this.connectionMap.forEach((connection, id) => {\n        if (connection && (connection.from.id === connectorId || connection.to.id === connectorId)) {\n          this.removeLine(id);\n          this.connectionMap.delete(id);\n        }\n      });\n    });\n  }\n\n  private removeRectangleElement(rectangle: Rectangle) {\n    this.rectangles = this.rectangles.filter(r => r !== rectangle);\n    rectangle.element.remove();\n    this.elementManager.deleteDataObjectById(rectangle.id);\n  }\n\n  removeRectangleById(id: string) {\n    const rectangle = this.rectangles.find(r => r && r.options.id === id);\n    if (rectangle) {\n      this.removeRectangle(rectangle);\n    } else {\n      console.warn(`Rectangle with id ${id} not found`);\n    }\n  }\n\n  private startConnection(event: MouseEvent, type: \"input\" | \"output\") {\n    event.preventDefault();\n    const connector = event.currentTarget as HTMLElement;\n    const startType = type;\n\n    // Initialize the state\n    let isConnectionInProgress = false;\n    const {startX, startY, svg, svgRect} = this.getConnectorPosition(connector);\n    let tempLine: SVGLineElement | null = null;\n\n    // Debouncing the connection\n    const onMouseMove = (moveEvent: MouseEvent) => {\n      if (!isConnectionInProgress) {\n        isConnectionInProgress = true;\n        tempLine = this.updateTemporaryLine(tempLine, startX, startY, moveEvent, svgRect);\n      } else if (tempLine) {\n        // Update the temporary line position as we move the mouse\n        tempLine.setAttribute(\"x2\", `${moveEvent.clientX - svgRect.left}`);\n        tempLine.setAttribute(\"y2\", `${moveEvent.clientY - svgRect.top}`);\n      }\n    };\n\n    const onMouseUp = (upEvent: MouseEvent) => {\n      this.handleConnectionEnd(upEvent, startType, connector, tempLine, svgRect, onMouseMove);\n\n      // Ensure the temporary line is removed\n      if (tempLine) {\n        tempLine.remove();\n        tempLine = null;\n      }\n\n      // Reset the connection in progress flag\n      isConnectionInProgress = false;\n    };\n\n    document.addEventListener(\"mousemove\", onMouseMove);\n    document.addEventListener(\"mouseup\", onMouseUp, {once: true});\n  }\n\n  private getConnectorPosition(connector: HTMLElement) {\n    const svg = this.shadowRoot!.querySelector(\"svg\")!;\n    const svgRect = svg.getBoundingClientRect();\n    const connectorRect = connector.getBoundingClientRect();\n    const startX = connectorRect.left + connectorRect.width / 2 - svgRect.left;\n    const startY = connectorRect.top + connectorRect.height / 2 - svgRect.top;\n\n    return {startX, startY, svg, svgRect};\n  }\n\n  private updateTemporaryLine(\n    tempLine: SVGLineElement | null,\n    startX: number,\n    startY: number,\n    moveEvent: MouseEvent,\n    svgRect: DOMRect\n  ): SVGLineElement {\n    if (!tempLine) {\n      tempLine = this.drawTemporaryLine(startX, startY);\n    }\n    tempLine.setAttribute(\"x2\", `${moveEvent.clientX - svgRect.left}`);\n    tempLine.setAttribute(\"y2\", `${moveEvent.clientY - svgRect.top}`);\n    return tempLine;\n  }\n\n  private handleConnectionEnd(\n    upEvent: MouseEvent,\n    startType: \"input\" | \"output\",\n    connector: HTMLElement,\n    tempLine: SVGLineElement | null,\n    svgRect: DOMRect,\n    onMouseMove: (moveEvent: MouseEvent) => void\n  ) {\n    const target = this.getConnectorFromEvent(upEvent);\n    if (target && target !== connector && this.isValidConnection(startType, target)) {\n      this.createConnection(connector, target);\n    }\n\n    // Cleanup event listeners and the temporary line\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    if (tempLine) {\n      tempLine.remove();\n    }\n  }\n\n  private createConnection(from: HTMLElement, to: HTMLElement, inputId?: string) {\n    const id = inputId || crypto.randomUUID();\n\n    if (!this.connectionMap.has(id)) {\n      this.connectionMap.set(id, undefined);\n    } else {\n      return;\n    }\n\n    const connectionObject: ConnectionObject = {\n      id,\n      sourceConnectorId: from.getAttribute('id')!,\n      targetConnectorId: to.getAttribute('id')!,\n    };\n\n    if (!this.connectionManager.addConnectionObject(connectionObject) && !inputId) {\n      console.log('Connection already exists');\n      return;\n    }\n\n    const fromRectangle = this.rectangles.find(rect => rect.element.contains(from));\n    const toRectangle = this.rectangles.find(rect => rect.element.contains(to));\n\n    if (fromRectangle && toRectangle && fromRectangle === toRectangle) {\n      console.log(\"Cannot create a connection between connectors on the same rectangle.\");\n      return;\n    }\n\n    const fromRect = from.getBoundingClientRect();\n    const toRect = to.getBoundingClientRect();\n\n    const containerRect = this.shadowRoot!.querySelector(\".grid-container\")!.getBoundingClientRect();\n\n    const fromX = fromRect.left + fromRect.width / 2 - containerRect.left;\n    const fromY = fromRect.top + fromRect.height / 2 - containerRect.top;\n\n    const toX = toRect.left + toRect.width / 2 - containerRect.left;\n    const toY = toRect.top + toRect.height / 2 - containerRect.top;\n\n    const line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n    line.setAttribute(\"id\", id);\n    line.setAttribute(\"x1\", `${fromX}`);\n    line.setAttribute(\"y1\", `${fromY}`);\n    line.setAttribute(\"x2\", `${toX}`);\n    line.setAttribute(\"y2\", `${toY}`);\n    line.setAttribute(\"stroke\", \"black\");\n    line.setAttribute(\"stroke-width\", \"1\");\n    line.setAttribute(\"shape-rendering\", \"geometricPrecision\");\n\n    line.classList.add(\"line-hover\");\n\n    this.shadowRoot!.querySelector(\"svg\")!.appendChild(line);\n    this.connectionMap.set(id, {from, to, line});\n  }\n\n  private getConnectorFromEvent(upEvent: MouseEvent): HTMLElement | undefined {\n    return upEvent.composedPath().find(\n      (el: EventTarget) => el instanceof HTMLElement && el.classList.contains(\"connector\")\n    ) as HTMLElement | undefined;\n  }\n\n  private isValidConnection(startType: \"input\" | \"output\", target: HTMLElement): boolean {\n    const targetType = target.classList.contains(\"input-connector\") ? \"input\" : \"output\";\n    return (startType === \"output\" && targetType === \"input\") ||\n      (startType === \"input\" && targetType === \"output\");\n  }\n\n  private drawTemporaryLine(startX: number, startY: number): SVGLineElement {\n    const svg = this.shadowRoot!.querySelector(\"svg\");\n    const tempLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n\n    tempLine.setAttribute(\"x1\", `${startX}`);\n    tempLine.setAttribute(\"y1\", `${startY}`);\n    tempLine.setAttribute(\"stroke\", \"black\");\n    tempLine.setAttribute(\"id\", \"temp-line\");\n    tempLine.setAttribute(\"shape-rendering\", \"geometricPrecision\");\n\n    svg!.appendChild(tempLine);\n\n    return tempLine;\n  }\n\n  handleRectangleMouseDown(event: MouseEvent, rect: Rectangle) {\n    event.stopPropagation();\n\n    const startX = event.clientX;\n    const startY = event.clientY;\n    const initialPosition = {\n      left: parseInt(rect.element.style.left, 10),\n      top: parseInt(rect.element.style.top, 10)\n    };\n\n    const onMouseMove = (moveEvent: MouseEvent) => {\n      const dx = moveEvent.clientX - startX;\n      const dy = moveEvent.clientY - startY;\n\n      let newLeft = initialPosition.left + dx;\n      let newTop = initialPosition.top + dy;\n\n      newLeft = Math.max(0, newLeft);\n      newTop = Math.max(0, newTop);\n\n      rect.element.style.left = `${newLeft}px`;\n      rect.element.style.top = `${newTop}px`;\n\n      this.updateConnections();\n    };\n\n    const onMouseUp = () => {\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n  }\n\n  updateConnections() {\n    const containerRect = this.shadowRoot!.querySelector(\".grid-container\")!.getBoundingClientRect();\n    this.connectionMap.forEach((connection) => {\n      if (!connection) return;\n\n\n      const fromRect = connection.from.getBoundingClientRect();\n      const toRect = connection.to.getBoundingClientRect();\n\n      const fromX = fromRect.left + fromRect.width / 2 - containerRect.left;\n      const fromY = fromRect.top + fromRect.height / 2 - containerRect.top;\n\n      const toX = toRect.left + toRect.width / 2 - containerRect.left;\n      const toY = toRect.top + toRect.height / 2 - containerRect.top;\n\n      connection.line.setAttribute(\"x1\", `${fromX}`);\n      connection.line.setAttribute(\"y1\", `${fromY}`);\n      connection.line.setAttribute(\"x2\", `${toX}`);\n      connection.line.setAttribute(\"y2\", `${toY}`);\n    });\n  }\n\n  removeLine(id: string) {\n    const connection = this.connectionMap.get(id);\n\n    if (!connection) {\n      console.warn(`No connection found with id: ${id}`);\n      return;\n    }\n\n    const svg = this.shadowRoot!.querySelector(\"svg\");\n\n    if (svg && svg.contains(connection.line)) {\n      svg.removeChild(connection.line);\n      this.connectionManager.deleteConnectionObjectById(id);\n      this.connectionMap.delete(id);\n    }\n  }\n\n  render() {\n    return html`\n      <div class=\"grid-container\">\n        <svg style=\"position:absolute; width:100%; height:100%;\" id=\"grid\">\n          <defs>\n            <marker id=\"arrowhead\" markerWidth=\"12\" markerHeight=\"12\" refX=\"12\" refY=\"6\" orient=\"auto\" fill=\"black\">\n              <path d=\"M0,0 L0,12 L12,6 z\"/>\n            </marker>\n          </defs>\n        </svg>\n      </div>\n    `;\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      height: 100%;\n    }\n\n    .grid-container {\n      position: relative;\n      width: 100%;\n      height: 100%;\n      background-size: 20px 20px;\n      background-color: white;\n      background-image: linear-gradient(\n        to right,\n        rgba(0, 0, 0, 0.1) 1px,\n        transparent 1px\n      ), linear-gradient(to bottom, rgba(0, 0, 0, 0.1) 1px, transparent 1px);\n      overflow: auto;\n    }\n\n    svg {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      z-index: 1;\n      pointer-events: none;\n      shape-rendering: geometricPrecision;\n      backface-visibility: hidden;\n      transform: translateZ(0);\n    }\n\n    .rectangle {\n      position: absolute;\n      width: 120px;\n      height: 100%;\n      background-color: #fdf5e3;\n      border: 1px solid rgba(0, 0, 0, 0.15);\n      border-radius: 6px;\n      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n      cursor: move;\n      z-index: 2;\n      user-select: none;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      font-family: Arial, sans-serif;\n      color: #333;\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\n      padding-bottom: 0;\n    }\n\n    .rectangle:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n    }\n\n    .rectangle-header {\n      background-color: #e0e0e0;\n      color: #000;\n      padding: 4px 6px;\n      border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n      text-align: left;\n      font-weight: bold;\n      font-size: 12px;\n      border-radius: 6px 6px 0 0;\n    }\n\n    .connector {\n      width: 16px;\n      height: 16px;\n      border-radius: 50%;\n      cursor: pointer;\n      position: absolute;\n      background-color: #555;\n      border: 2px solid #ccc;\n      transition: background-color 0.2s ease, transform 0.2s ease, top 0.3s ease;\n    }\n\n    .connector:hover {\n      background-color: #999;\n      transform: scale(1.2);\n    }\n\n    .connector.move-up {\n      top: -25px !important;\n    }\n\n    .input-connector {\n      background-color: #3ba55d;\n    }\n\n    .output-connector {\n      background-color: #e63946;\n    }\n\n    .connector-text {\n      font-size: 13px;\n      color: #333;\n      font-family: Arial, sans-serif;\n      position: absolute;\n      white-space: nowrap;\n    }\n\n    .action-overlay-container {\n      display: flex;\n      flex-direction: column;\n      background-color: #faf4e6;\n      border: 1px solid #ccc;\n      padding: 5px;\n      border-radius: 4px;\n      box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n      z-index: 1100;\n      position: absolute;\n    }\n\n    .action-bar {\n      display: flex;\n      justify-content: flex-start;\n      padding: 4px;\n      background-color: rgba(0, 0, 0, 0.05);\n      border-top: 1px solid rgba(0, 0, 0, 0.1);\n      opacity: 0;\n      transition: opacity 0.2s ease;\n    }\n\n    .rectangle:hover .action-bar {\n      opacity: 1;\n    }\n\n    .action-bar button {\n      background: none;\n      border: none;\n      cursor: pointer;\n      padding: 4px;\n      margin: 0 4px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .action-bar button:hover {\n      background-color: rgba(0, 0, 0, 0.1);\n      border-radius: 50%;\n    }\n\n    mwc-icon {\n      font-size: 16px;\n      color: #333;\n    }\n  `;\n}\n"]}