{"version":3,"file":"element-manager.service.js","sourceRoot":"","sources":["../../../../src/editors/io-center/element-manager/element-manager.service.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAGhD,MAAM,OAAO,qBAAqB;IAchC;QAXA,+CAA0C,IAAI,GAAG,EAAE,EAAC;QAEpD,6CAA8C,IAAI,eAAe,CAAe,EAAE,CAAC,EAAC;QACpF,iBAAY,GAAG,uBAAA,IAAI,0CAAa,CAAC,YAAY,EAAE,CAAC;QAEhD,iDAAwC,IAAI,OAAO,EAAc,EAAC;QAClE,qBAAgB,GAAG,uBAAA,IAAI,8CAAiB,CAAC,YAAY,EAAE,CAAC;QAExD,mDAA0C,IAAI,OAAO,EAAc,EAAC;QACpE,uBAAkB,GAAG,uBAAA,IAAI,gDAAmB,CAAC,YAAY,EAAE,CAAC;IAErC,CAAC;IAEjB,MAAM,CAAC,WAAW;QACvB,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE;YACnC,qBAAqB,CAAC,QAAQ,GAAG,IAAI,qBAAqB,EAAE,CAAC;SAC9D;QACD,OAAO,qBAAqB,CAAC,QAAQ,CAAC;IACxC,CAAC;IAED,cAAc;QACZ,OAAO,KAAK,CAAC,IAAI,CAAC,uBAAA,IAAI,4CAAe,CAAC,MAAM,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,aAAa,CAAC,UAAsB;QAClC,IAAI,uBAAA,IAAI,4CAAe,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;YAC1C,OAAO,CAAC,IAAI,CAAC,uBAAuB,UAAU,CAAC,EAAE,kBAAkB,CAAC,CAAC;YACrE,OAAO;SACR;QAED,uBAAA,IAAI,4CAAe,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;QACnD,uBAAA,IAAI,0CAAa,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAC9C,uBAAA,IAAI,8CAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;IAED,oBAAoB,CAAC,EAAU;QAC7B,MAAM,iBAAiB,GAAG,uBAAA,IAAI,4CAAe,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAEtD,IAAI,CAAC,iBAAiB,EAAE;YACtB,OAAO;SACR;QAED,uBAAA,IAAI,4CAAe,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC/B,uBAAA,IAAI,0CAAa,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAE9C,uBAAA,IAAI,gDAAmB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAClD,CAAC;IAED,0BAA0B,CAAC,WAAmB;QAC5C,KAAK,MAAM,UAAU,IAAI,uBAAA,IAAI,4CAAe,CAAC,MAAM,EAAE,EAAE;YACrD,IAAI,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,WAAW,CAAC,EAAE;gBAC3D,OAAO,UAAU,CAAC;aACnB;SACF;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,UAAU;QACR,OAAO,KAAK,CAAC,IAAI,CAAC,uBAAA,IAAI,4CAAe,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;IACrF,CAAC;IAED,gBAAgB;QACd,uBAAA,IAAI,4CAAe,CAAC,KAAK,EAAE,CAAC;QAC5B,uBAAA,IAAI,0CAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;CACF","sourcesContent":["import { BehaviorSubject, Subject } from 'rxjs';\nimport { DataObject } from './data-object';\n\nexport class ElementManagerService {\n  private static instance: ElementManagerService;\n\n  #dataObjectMap: Map<string, DataObject> = new Map();\n\n  #dataObjects: BehaviorSubject<DataObject[]> = new BehaviorSubject<DataObject[]>([]);\n  dataObjects$ = this.#dataObjects.asObservable();\n\n  #dataObjectAdded: Subject<DataObject> = new Subject<DataObject>();\n  dataObjectAdded$ = this.#dataObjectAdded.asObservable();\n\n  #dataObjectDeleted: Subject<DataObject> = new Subject<DataObject>();\n  dataObjectDeleted$ = this.#dataObjectDeleted.asObservable();\n\n  private constructor() {}\n\n  public static getInstance(): ElementManagerService {\n    if (!ElementManagerService.instance) {\n      ElementManagerService.instance = new ElementManagerService();\n    }\n    return ElementManagerService.instance;\n  }\n\n  getDataObjects(): DataObject[] {\n    return Array.from(this.#dataObjectMap.values());\n  }\n\n  addDataObject(dataObject: DataObject) {\n    if (this.#dataObjectMap.has(dataObject.id)) {\n      console.warn(`Data Object with id ${dataObject.id} already exists.`);\n      return;\n    }\n\n    this.#dataObjectMap.set(dataObject.id, dataObject);\n    this.#dataObjects.next(this.getDataObjects());\n    this.#dataObjectAdded.next(dataObject);\n  }\n\n  deleteDataObjectById(id: string) {\n    const deletedDataObject = this.#dataObjectMap.get(id);\n\n    if (!deletedDataObject) {\n      return;\n    }\n\n    this.#dataObjectMap.delete(id);\n    this.#dataObjects.next(this.getDataObjects());\n\n    this.#dataObjectDeleted.next(deletedDataObject);\n  }\n\n  getDataObjectByConnectorId(connectorId: string): DataObject | undefined {\n    for (const dataObject of this.#dataObjectMap.values()) {\n      if (dataObject.connectors.find((c) => c.id === connectorId)) {\n        return dataObject;\n      }\n    }\n    return undefined;\n  }\n\n  getRouters(): DataObject[] {\n    return Array.from(this.#dataObjectMap.values()).filter((d) => d.type === 'ROUTER');\n  }\n\n  clearDataObjects() {\n    this.#dataObjectMap.clear();\n    this.#dataObjects.next([]);\n  }\n}\n"]}