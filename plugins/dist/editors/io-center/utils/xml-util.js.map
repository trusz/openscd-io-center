{"version":3,"file":"xml-util.js","sourceRoot":"","sources":["../../../../src/editors/io-center/utils/xml-util.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,iBAAiB,CAAC,OAAY,EAAE,GAAW,EAAE,GAAgB;IAC3E,MAAM,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC;IAC3D,IAAI,CAAC,UAAU,EAAE;QACf,OAAO,CAAC,KAAK,CAAC,kBAAkB,GAAG,cAAc,CAAC,CAAC;QACnD,OAAO;KACR;IAED,MAAM,cAAc,GAAG,UAAU,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;IACvE,IAAI,CAAC,cAAc,EAAE;QACnB,OAAO,CAAC,KAAK,CAAC,6CAA6C,GAAG,IAAI,CAAC,CAAC;QACpE,OAAO;KACR;IAED,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QACtC,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;QAEjC,4DAA4D;QAC5D,sBAAsB,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAE3D,MAAM,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;QAChF,SAAS,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/C,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5C,SAAS,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QAE9C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACrC,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAChC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAE3B,MAAM,UAAU,GAAG,GAAG,CAAC,eAAe,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;YAClF,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7C,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAE7C,MAAM,YAAY,GAAG,GAAG,CAAC,eAAe,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;YACtF,YAAY,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;YACxD,YAAY,CAAC,YAAY,CAAC,YAAY,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;YAC1D,YAAY,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;YACxD,YAAY,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;YAEhD,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YACrC,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,MAAM,UAAU,GAAG,IAAI,aAAa,EAAE,CAAC;IACvC,OAAO,UAAU,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;AAC3C,CAAC;AAED,MAAM,UAAU,qBAAqB,CAAC,GAAgB,EAAE,IAAY,EAAE,IAAY,EAAE,GAAW;IAC7F,MAAM,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC;IAC3D,IAAI,CAAC,UAAU,EAAE;QACf,OAAO,CAAC,KAAK,CAAC,kBAAkB,GAAG,cAAc,CAAC,CAAC;QACnD,OAAO,KAAK,CAAC;KACd;IAED,MAAM,cAAc,GAAG,UAAU,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;IACvE,IAAI,CAAC,cAAc,EAAE;QACnB,OAAO,CAAC,KAAK,CAAC,6CAA6C,GAAG,IAAI,CAAC,CAAC;QACpE,OAAO,KAAK,CAAC;KACd;IAED,MAAM,UAAU,GAAG,cAAc,CAAC,aAAa,CAAC,eAAe,IAAI,YAAY,IAAI,IAAI,CAAC,CAAC;IACzF,OAAO,CAAC,CAAC,UAAU,CAAC;AACtB,CAAC;AAED,MAAM,UAAU,sBAAsB,CAAC,GAAgB,EAAE,IAAY,EAAE,IAAY,EAAE,GAAW;IAC9F,MAAM,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC;IAC3D,IAAI,CAAC,UAAU,EAAE;QACf,OAAO,CAAC,KAAK,CAAC,kBAAkB,GAAG,cAAc,CAAC,CAAC;QACnD,OAAO,KAAK,CAAC;KACd;IAED,MAAM,cAAc,GAAG,UAAU,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;IAEvE,IAAI,CAAC,cAAc,EAAE;QACnB,OAAO,CAAC,KAAK,CAAC,6CAA6C,GAAG,IAAI,CAAC,CAAC;QACpE,OAAO,KAAK,CAAC;KACd;IAED,MAAM,UAAU,GAAG,cAAc,CAAC,aAAa,CAAC,eAAe,IAAI,YAAY,IAAI,IAAI,CAAC,CAAC;IAEzF,IAAI,UAAU,EAAE;QACd,UAAU,CAAC,MAAM,EAAE,CAAC,CAAE,wBAAwB;QAC9C,OAAO,CAAC,GAAG,CAAC,4BAA4B,IAAI,eAAe,IAAI,aAAa,GAAG,IAAI,CAAC,CAAC;QACrF,OAAO,IAAI,CAAC;KACb;SAAM;QACL,OAAO,CAAC,GAAG,CAAC,oBAAoB,IAAI,eAAe,IAAI,uBAAuB,GAAG,IAAI,CAAC,CAAC;QACvF,OAAO,KAAK,CAAC;KACd;AACH,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,UAA0B;IACpD,IAAI,CAAC,UAAU,EAAE;QACf,OAAO,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC;KACb;IAED,MAAM,QAAQ,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,QAAQ,EAAE;QACZ,OAAO,CAAC,GAAG,CAAC,iCAAiC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACnF,OAAO,QAAQ,CAAC;KACjB;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,UAAU,kBAAkB,CAChC,GAAgB,EAChB,SAAiB,EACjB,UAAkB,EAClB,SAAiB,EACjB,KAAa,EACb,GAAW;IAEX,MAAM,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC;IAE3D,IAAI,CAAC,UAAU,EAAE;QACf,OAAO,CAAC,KAAK,CAAC,kBAAkB,GAAG,cAAc,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC;KACb;IAED,MAAM,cAAc,GAAG,UAAU,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;IAEvE,IAAI,CAAC,cAAc,EAAE;QACnB,OAAO,CAAC,KAAK,CAAC,6CAA6C,GAAG,IAAI,CAAC,CAAC;QACpE,OAAO,IAAI,CAAC;KACb;IAED,MAAM,YAAY,GAAG,cAAc,CAAC,aAAa,CAC/C,+BAA+B,SAAS,kBAAkB,UAAU,iBAAiB,SAAS,aAAa,KAAK,IAAI,CACrH,CAAC;IAEF,IAAI,YAAY,EAAE;QAChB,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,IAAI,CAAC,CAAC;QACpD,OAAO,YAAY,CAAC;KACrB;IAED,OAAO,CAAC,GAAG,CAAC,4BAA4B,SAAS,kBAAkB,UAAU,iBAAiB,SAAS,iBAAiB,KAAK,mBAAmB,GAAG,IAAI,CAAC,CAAC;IACzJ,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,GAAgB,EAAE,WAAqB,EAAE,GAAW;IACtF,MAAM,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC;IAE3D,IAAI,CAAC,UAAU,EAAE;QACf,OAAO,CAAC,KAAK,CAAC,kBAAkB,GAAG,cAAc,CAAC,CAAC;QACnD,OAAO,KAAK,CAAC;KACd;IAED,MAAM,cAAc,GAAG,UAAU,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;IAEvE,IAAI,CAAC,cAAc,EAAE;QACnB,OAAO,CAAC,KAAK,CAAC,6CAA6C,GAAG,IAAI,CAAC,CAAC;QACpE,OAAO,KAAK,CAAC;KACd;IAED,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;QACpC,MAAM,SAAS,GAAG,cAAc,CAAC,aAAa,CAAC,eAAe,UAAU,IAAI,CAAC,CAAC;QAC9E,IAAI,SAAS,EAAE;YACb,OAAO,CAAC,GAAG,CAAC,qBAAqB,UAAU,qCAAqC,GAAG,IAAI,CAAC,CAAC;YACzF,OAAO,IAAI,CAAC;SACb;KACF;IAED,OAAO,CAAC,GAAG,CAAC,6CAA6C,GAAG,IAAI,CAAC,CAAC;IAClE,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,GAAgB,EAAE,GAAW;IACzD,MAAM,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC;IAE3D,IAAI,CAAC,UAAU,EAAE;QACf,OAAO,CAAC,KAAK,CAAC,kBAAkB,GAAG,cAAc,CAAC,CAAC;QACnD,OAAO,EAAE,CAAC;KACX;IAED,MAAM,cAAc,GAAG,UAAU,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;IAEvE,IAAI,CAAC,cAAc,EAAE;QACnB,OAAO,CAAC,KAAK,CAAC,6CAA6C,GAAG,IAAI,CAAC,CAAC;QACpE,OAAO,EAAE,CAAC;KACX;IAED,iCAAiC;IACjC,OAAO,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,gFAAgF,CAAC,CAAC,CAAC;AACvI,CAAC","sourcesContent":["export function writeXMLDictToXML(xmlDict: any, ied: string, doc: XMLDocument) {\n  const iedElement = doc.querySelector(`IED[name=\"${ied}\"]`);\n  if (!iedElement) {\n    console.error(`IED with name=\"${ied}\" not found.`);\n    return;\n  }\n\n  const lDeviceElement = iedElement.querySelector('LDevice[inst=\"LD0\"]');\n  if (!lDeviceElement) {\n    console.error(`LDevice with inst=\"LD0\" not found in IED \"${ied}\".`);\n    return;\n  }\n\n  Object.keys(xmlDict).forEach(routerId => {\n    const router = xmlDict[routerId];\n\n    // TODO: Validate router object, if no connectors, then skip\n    removeExistingRouterLN(doc, router.type, router.inst, ied);\n\n    const lnElement = doc.createElementNS(\"http://www.iec.ch/61850/2003/SCL\", 'LN');\n    lnElement.setAttribute('lnClass', router.type);\n    lnElement.setAttribute('inst', router.inst);\n    lnElement.setAttribute('lnType', router.name);\n\n    Object.keys(router.dois).forEach(doi => {\n      const doiObj = router.dois[doi];\n      const lnRef = doiObj.lnRef;\n\n      const doiElement = doc.createElementNS(\"http://www.iec.ch/61850/2003/SCL\", 'DOI');\n      doiElement.setAttribute('name', doiObj.name);\n      doiElement.setAttribute('desc', doiObj.desc);\n\n      const lnRefElement = doc.createElementNS(\"http://www.iec.ch/61850/2003/SCL\", 'LNRef');\n      lnRefElement.setAttribute('refLDInst', lnRef.refLDInst);\n      lnRefElement.setAttribute('refLNClass', lnRef.refLNClass);\n      lnRefElement.setAttribute('refLNInst', lnRef.refLNInst);\n      lnRefElement.setAttribute('refDO', lnRef.refDO);\n\n      doiElement.appendChild(lnRefElement);\n      lnElement.appendChild(doiElement);\n    });\n\n    lDeviceElement.appendChild(lnElement);\n  });\n\n  const serializer = new XMLSerializer();\n  return serializer.serializeToString(doc);\n}\n\nexport function checkIfRouterLNExists(doc: XMLDocument, type: string, inst: string, ied: string): boolean {\n  const iedElement = doc.querySelector(`IED[name=\"${ied}\"]`);\n  if (!iedElement) {\n    console.error(`IED with name=\"${ied}\" not found.`);\n    return false;\n  }\n\n  const lDeviceElement = iedElement.querySelector(`LDevice[inst=\"LD0\"]`);\n  if (!lDeviceElement) {\n    console.error(`LDevice with inst=\"LD0\" not found in IED \"${ied}\".`);\n    return false;\n  }\n\n  const existingLN = lDeviceElement.querySelector(`LN[lnClass=\"${type}\"][inst=\"${inst}\"]`);\n  return !!existingLN;\n}\n\nexport function removeExistingRouterLN(doc: XMLDocument, type: string, inst: string, ied: string): boolean {\n  const iedElement = doc.querySelector(`IED[name=\"${ied}\"]`);\n  if (!iedElement) {\n    console.error(`IED with name=\"${ied}\" not found.`);\n    return false;\n  }\n\n  const lDeviceElement = iedElement.querySelector('LDevice[inst=\"LD0\"]');\n\n  if (!lDeviceElement) {\n    console.error(`LDevice with inst=\"LD0\" not found in IED \"${ied}\".`);\n    return false;\n  }\n\n  const existingLN = lDeviceElement.querySelector(`LN[lnClass=\"${type}\"][inst=\"${inst}\"]`);\n\n  if (existingLN) {\n    existingLN.remove();  // Remove the LN element\n    console.log(`Removed LN with lnClass=\"${type}\" and inst=\"${inst}\" in IED \"${ied}\".`);\n    return true;\n  } else {\n    console.log(`LN with lnClass=\"${type}\" and inst=\"${inst}\" not found in IED \"${ied}\".`);\n    return false;\n  }\n}\n\nexport function getParentLN(xmlElement: Element | null): Element | null {\n  if (!xmlElement) {\n    console.error(\"Provided XML element is null or undefined.\");\n    return null;\n  }\n\n  const parentLN = xmlElement.closest('LN');\n  if (parentLN) {\n    console.log(`Found parent LN with lnClass=\"${parentLN.getAttribute('lnClass')}\".`);\n    return parentLN;\n  }\n\n  return null;\n}\n\nexport function checkIfLNRefExists(\n  doc: XMLDocument,\n  refLDInst: string,\n  refLNClass: string,\n  refLNInst: string,\n  refDO: string,\n  ied: string\n): Element | null {\n  const iedElement = doc.querySelector(`IED[name=\"${ied}\"]`);\n\n  if (!iedElement) {\n    console.error(`IED with name=\"${ied}\" not found.`);\n    return null;\n  }\n\n  const lDeviceElement = iedElement.querySelector(`LDevice[inst=\"LD0\"]`);\n\n  if (!lDeviceElement) {\n    console.error(`LDevice with inst=\"LD0\" not found in IED \"${ied}\".`);\n    return null;\n  }\n\n  const lnRefElement = lDeviceElement.querySelector(\n    `LN > DOI > LNRef[refLDInst=\"${refLDInst}\"][refLNClass=\"${refLNClass}\"][refLNInst=\"${refLNInst}\"][refDO=\"${refDO}\"]`\n  );\n\n  if (lnRefElement) {\n    console.log(`LNRef element found in IED \"${ied}\".`);\n    return lnRefElement;\n  }\n\n  console.log(`No LNRef with refLDInst=\"${refLDInst}\", refLNClass=\"${refLNClass}\", refLNInst=\"${refLNInst}\", and refDO=\"${refDO}\" found in IED \"${ied}\".`);\n  return null;\n}\n\nexport function checkIfRouterExists(doc: XMLDocument, routerTypes: string[], ied: string): boolean {\n  const iedElement = doc.querySelector(`IED[name=\"${ied}\"]`);\n\n  if (!iedElement) {\n    console.error(`IED with name=\"${ied}\" not found.`);\n    return false;\n  }\n\n  const lDeviceElement = iedElement.querySelector(`LDevice[inst=\"LD0\"]`);\n\n  if (!lDeviceElement) {\n    console.error(`LDevice with inst=\"LD0\" not found in IED \"${ied}\".`);\n    return false;\n  }\n\n  for (const routerType of routerTypes) {\n    const lnElement = lDeviceElement.querySelector(`LN[lnClass=\"${routerType}\"]`);\n    if (lnElement) {\n      console.log(`Router with type \"${routerType}\" exists in LDevice \"LD0\" of IED \"${ied}\".`);\n      return true;\n    }\n  }\n\n  console.log(`No routers found in LDevice \"LD0\" of IED \"${ied}\".`);\n  return false;\n}\n\nexport function getLPsFromIED(doc: XMLDocument, ied: string): Element[] {\n  const iedElement = doc.querySelector(`IED[name=\"${ied}\"]`);\n\n  if (!iedElement) {\n    console.error(`IED with name=\"${ied}\" not found.`);\n    return [];\n  }\n\n  const lDeviceElement = iedElement.querySelector(`LDevice[inst=\"LD0\"]`);\n\n  if (!lDeviceElement) {\n    console.error(`LDevice with inst=\"LD0\" not found in IED \"${ied}\".`);\n    return [];\n  }\n\n  // Query for all known LP classes\n  return Array.from(lDeviceElement.querySelectorAll('LN[lnClass=\"LPDI\"], LN[lnClass=\"LPDO\"], LN[lnClass=\"LPAI\"], LN[lnClass=\"LPAO\"]'));\n}\n"]}